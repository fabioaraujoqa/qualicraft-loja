{
  "swagger": "2.0",
  "info": {
    "title": "QualiCraft API",
    "version": "1.0.0",
    "description": "API para a aplicação QualiCraft, que gerencia produtos, carrinho de compras, pedidos e usuários."
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login de usuário",
        "description": "Autentica o usuário e retorna um token JWT.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login bem-sucedido",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "401": {
            "description": "Email ou senha incorretos"
          }
        }
      }
    },
    "/carrinho/{userId}": {
      "get": {
        "summary": "Listar itens do carrinho",
        "description": "Retorna uma lista de itens no carrinho do usuário.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de itens no carrinho.",
            "schema": {
              "$ref": "#/definitions/CarrinhoResponse"
            }
          },
          "500": {
            "description": "Erro ao buscar itens do carrinho."
          }
        }
      },
      "delete": {
        "summary": "Remover todos os itens do carrinho",
        "description": "Remove todos os itens do carrinho do usuário.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário"
          }
        ],
        "responses": {
          "200": {
            "description": "Todos os itens do carrinho removidos com sucesso.",
            "schema": {
              "$ref": "#/definitions/CarrinhoResponse"
            }
          },
          "500": {
            "description": "Erro ao remover itens do carrinho."
          }
        }
      }
    },
    "/carrinho": {
      "post": {
        "summary": "Adicionar produto ao carrinho",
        "description": "Adiciona um produto ao carrinho do usuário.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CarrinhoRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Produto adicionado ao carrinho com sucesso.",
            "schema": {
              "$ref": "#/definitions/CarrinhoResponse"
            }
          },
          "400": {
            "description": "Erro ao adicionar produto ao carrinho. Verifique se o produto já está no carrinho."
          },
          "500": {
            "description": "Erro ao adicionar produto ao carrinho."
          }
        }
      }
    },
    "/carrinho/{userId}/{productId}": {
      "delete": {
        "summary": "Remover item específico do carrinho",
        "description": "Remove um produto específico do carrinho do usuário.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário"
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do produto"
          }
        ],
        "responses": {
          "200": {
            "description": "Produto removido do carrinho com sucesso.",
            "schema": {
              "$ref": "#/definitions/CarrinhoResponse"
            }
          },
          "500": {
            "description": "Erro ao remover produto do carrinho."
          }
        }
      }
    },
    "/checkout": {
      "post": {
        "summary": "Finalizar pedido",
        "description": "Finaliza o pedido com base nos dados fornecidos e retorna o número do pedido.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckoutRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Pedido finalizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/CheckoutResponse"
            }
          },
          "400": {
            "description": "Erro de validação nos dados fornecidos. Verifique se todos os campos obrigatórios foram preenchidos corretamente."
          },
          "500": {
            "description": "Erro ao finalizar pedido."
          }
        }
      }
    },
    "/produtos": {
      "get": {
        "summary": "Listar produtos",
        "description": "Retorna uma lista de produtos com suporte a paginação.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Número da página"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Número de produtos por página"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de produtos.",
            "schema": {
              "$ref": "#/definitions/ProdutosResponse"
            }
          },
          "500": {
            "description": "Erro ao buscar produtos."
          }
        }
      }
    },
    "/produtos/{id}": {
      "get": {
        "summary": "Obter detalhes de um produto",
        "description": "Retorna os detalhes de um produto específico.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do produto"
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do produto.",
            "schema": {
              "$ref": "#/definitions/ProdutoResponse"
            }
          },
          "404": {
            "description": "Produto não encontrado."
          },
          "500": {
            "description": "Erro ao buscar detalhes do produto."
          }
        }
      }
    },
    "/orders": {
      "get": {
        "summary": "Listar pedidos do usuário",
        "description": "Retorna uma lista de pedidos de um usuário específico.",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "type": "integer",
            "required": true,
            "description": "ID do usuário"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pedidos.",
            "schema": {
              "$ref": "#/definitions/OrdersResponse"
            }
          },
          "500": {
            "description": "Erro ao buscar pedidos."
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Criar um novo usuário",
        "description": "Cria um novo usuário com base nos dados fornecidos. \nNão é permitido criar email repetido. ",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso."
          },
          "400": {
            "description": "Erro de validação nos dados fornecidos. Verifique se o email já está em uso."
          },
          "500": {
            "description": "Erro ao criar usuário."
          }
        }
      },
      "get": {
        "summary": "Listar usuários",
        "description": "Retorna uma lista de usuários.",
        "responses": {
          "200": {
            "description": "Lista de usuários.",
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            }
          },
          "500": {
            "description": "Erro ao buscar usuários."
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Atualizar usuário",
        "description": "Atualiza os dados de um usuário existente. \nRota somente para usuários autenticados.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso."
          },
          "500": {
            "description": "Erro ao atualizar usuário."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Deletar usuário",
        "description": "Deleta um usuário existente. \n Rota somente para usuários autenticados.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário"
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário deletado com sucesso."
          },
          "500": {
            "description": "Erro ao deletar usuário."
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "definitions": {
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "usuario@exemplo.com"
        },
        "password": {
          "type": "string",
          "example": "senha123"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "token": {
          "type": "string",
          "example": "JWT token"
        }
      }
    },
    "CarrinhoRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "example": 1
        },
        "productId": {
          "type": "integer",
          "example": 101
        },
        "quantity": {
          "type": "integer",
          "example": 2
        }
      },
      "required": [
        "userId",
        "productId",
        "quantity"
      ]
    },
    "CarrinhoUpdateRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "example": 1
        },
        "productId": {
          "type": "integer",
          "example": 101
        },
        "quantity": {
          "type": "integer",
          "example": 2
        }
      },
      "required": [
        "userId",
        "productId",
        "quantity"
      ]
    },
    "CarrinhoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 123
        },
        "message": {
          "type": "string",
          "example": "mensagem"
        }
      }
    },
    "CheckoutRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "example": 1
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "address": {
          "type": "string",
          "example": "123 Main St"
        },
        "number": {
          "type": "string",
          "example": "456"
        },
        "cep": {
          "type": "string",
          "example": "12345678"
        },
        "phone": {
          "type": "string",
          "example": "1234567890"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "paymentMethod": {
          "type": "string",
          "example": "credit_card"
        },
        "cardNumber": {
          "type": "string",
          "example": "1234123412341234"
        },
        "cardExpiry": {
          "type": "string",
          "example": "12/2025"
        },
        "cardCvc": {
          "type": "string",
          "example": "123"
        },
        "boletoCode": {
          "type": "string",
          "example": "23793.38128 60082.677139 66003.996498 1 89440000010000"
        },
        "pixKey": {
          "type": "string",
          "example": "123e4567-e89b-12d3-a456-426614174000"
        },
        "createAccount": {
          "type": "boolean",
          "example": false
        },
        "password": {
          "type": "string",
          "example": "Password123!"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "address",
        "number",
        "cep",
        "email",
        "paymentMethod"
      ]
    },
    "CheckoutResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 456
        },
        "orderNumber": {
          "type": "string",
          "example": "456-1234"
        }
      }
    },
    "ProdutosResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Produto"
          }
        },
        "totalPages": {
          "type": "integer",
          "example": 10
        },
        "currentPage": {
          "type": "integer",
          "example": 1
        }
      }
    },
    "ProdutoResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 101
        },
        "name": {
          "type": "string",
          "example": "Produto Exemplo"
        },
        "price": {
          "type": "number",
          "example": 199.99
        },
        "description": {
          "type": "string",
          "example": "Descrição do produto exemplo."
        }
      }
    },
    "Produto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 101
        },
        "name": {
          "type": "string",
          "example": "Produto Exemplo"
        },
        "price": {
          "type": "number",
          "example": 199.99
        },
        "description": {
          "type": "string",
          "example": "Descrição do produto exemplo."
        }
      }
    },
    "OrdersResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Order"
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 123
        },
        "userId": {
          "type": "integer",
          "example": 1
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "address": {
          "type": "string",
          "example": "123 Main St"
        },
        "number": {
          "type": "string",
          "example": "456"
        },
        "cep": {
          "type": "string",
          "example": "12345678"
        },
        "phone": {
          "type": "string",
          "example": "1234567890"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "paymentMethod": {
          "type": "string",
          "example": "credit_card"
        },
        "totalPrice": {
          "type": "number",
          "example": 219.89
        },
        "status": {
          "type": "string",
          "example": "Pagamento aprovado"
        },
        "orderNumber": {
          "type": "string",
          "example": "123-5678"
        }
      }
    },
    "UserRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "password": {
          "type": "string",
          "example": "Password123!"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        }
      },
      "required": [
        "name",
        "email",
        "password"
      ]
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "example": 123
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "UsersResponse": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserResponse"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Cabeçalho de autorização JWT usando o esquema Bearer. Exemplo: \"Authorization: Bearer {token}\""
    }
  }
}
